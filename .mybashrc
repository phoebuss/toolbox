#!/usr/bin/env bash

HISTSIZE=200000
HISTFILESIZE=200000
HISTTIMEFORMAT="%m/%d/%y %T"

case "$TERM" in
    xterm*|*-256color|screen) color_prompt=yes;;
esac

if [ "$color_prompt" = yes ]; then
    PS1='\[\033[01;32m\]\w \[\033[01;33m\]\$ \[\033[00m\]'
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias dir='dir --color=auto'
    alias vdir='vdir --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

export LANG=zh_CN.utf8
export PYTHONSTARTUP="$HOME/.pythonrc"

# start ssh-agent and register all unprotected private key in $HOME/.ssh
[ x$SSH_AUTH_SOCK == x ] && {
    runtime="/var/run/user/${UID}"
    socket="${runtime}/ssh_agent.socket"
    cache="${runtime}/ssh_agent.cache"
    [ -S $socket ] || {
        s=`ssh-agent -a $socket | xargs | cut -d ';' -f '1-4'`
        echo $s > ${cache}; sync
    }
    [ -f $cache ] && source ${cache}

    tmpfile=`mktemp`
    cat > $tmpfile << EOF
#!/usr/bin/env bash
read s
echo \$s
EOF
    chmod a+x $tmpfile

    [ x$DISPLAY == x ] || DISPLAY_O=$DISPLAY
    [ x$SSH_ASKPASS == x ] || SSH_ASKPASS_O=$SSH_ASKPASS

    export DISPLAY=:0
    export SSH_ASKPASS=$tmpfile

    for k in `find ${HOME}/.ssh -name 'id_rsa*' ! -name '*.pub'`; do
        ssh-add $k 2>/dev/null <<< ''
    done

    [ x$DISPLAY_O == x ] && unset DISPLAY || export DISPLAY=$DISPLAY_O
    [ x$SSH_ASKPASS_O == x ] && unset SSH_ASKPASS || export SSH_ASKPASS=$SSH_ASKPASS_O

    rm $tmpfile
}
